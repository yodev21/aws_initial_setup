AWSTemplateFormatVersion: '2010-09-09'
Description: >
  CloudFormation template to create an EC2 instance in a private subnet with Docker installed and SSM enabled.

Resources:

  # Create a VPC
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyVPC

  # Create a private subnet
  MyPrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: MyPrivateSubnet
      AvailabilityZone: !Select [ 0, !GetAZs "" ]

  # Create a Security Group
  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH and SSM
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: MySecurityGroup

  # IAM Role for EC2 with SSM and Instance Profile
  OperationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/AmazonEC2FullAccess
      Tags:
        - Key: Name
          Value: OperationRole

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref OperationRole

  # Create the EC2 instance
  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.medium
      SubnetId: !Ref MyPrivateSubnet
      SecurityGroupIds:
        - !Ref MySecurityGroup
      IamInstanceProfile: !Ref InstanceProfile
      ImageId: ami-08d4ac5b634553e16  # Amazon Linux 2 AMI
      UserData: !Base64 |
        #!/bin/bash
        yum update -y
        amazon-linux-extras install docker -y
        service docker start
        usermod -a -G docker ec2-user
        chkconfig docker on
      Tags:
        - Key: Name
          Value: MyTerraformInstance

Outputs:
  VPCId:
    Description: The ID of the created VPC
    Value: !Ref MyVPC

  PrivateSubnetId:
    Description: The ID of the created private subnet
    Value: !Ref MyPrivateSubnet

  EC2InstanceId:
    Description: The ID of the EC2 instance
    Value: !Ref MyEC2Instance
